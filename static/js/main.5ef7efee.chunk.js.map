{"version":3,"sources":["game/dice.js","game/gameHelpers.js","game/gameReducer.js","game/fireworks.js","game/game.js","game/gameKeyboardShortcuts.js","App.js","serviceWorker.js","index.js","game/wood-pattern.png"],"names":["Dice","props","state","diceClassToggler","prevProps","needsToRoll","this","setState","dice","className","map","die","i","diceToggler","data-roll","key","data-side","React","Component","toggler","index","canSelectNumbers","selectedNumbers","total","sumArray","possibleChoices","Array","keys","arr","reduce","a","b","rollDie","Math","ceil","random","getInitialState","availableChoices","allChoices","pickingNumbers","rolling","Set","gameOver","winner","rollDiceReducer","dispatch","isGameOver","isPossible","valuesArray","sum","target","length","remainingValues","slice","splice","setTimeout","type","finishRollDiceReducer","toggleChoiceReducer","choice","has","newSelectedNumbers","finalizeSelectionReducer","selectedNumbersValid","newAvailableChoices","forEach","num","delete","isWinner","size","availableNumbers","every","newGameReducer","newDice","concat","reducer","action","payload","Fireworks","GameOverOverlay","css","styles","gameOverContainer","gameOverOverlay","gameOverTextContainer","join","onClick","Numbers","chosenNumbers","toggleChoice","disabled","allNumbersContainer","style","backgroundImage","woodPattern","number","selected","Number","numberContainer","numberDisabledOverlay","numberSelected","numberDisabled","Game","useReducer","useEffect","handleKeypress","event","parseInt","window","addEventListener","removeEventListener","useKeyboardShortcuts","gameContainer","boxContainer","diceSurface","actionsContainer","StyleSheet","create","display","flexDirection","height","alignItems","flex","padding","paddingBottom","NUMBER_HEIGHT_MOBILE","backgroundColor","position","top","width","paddingTop","opacity","bottom","left","right","textAlign","maxWidth","border","borderColor","fontSize","fontWeight","color","cursor","justifyContent","numberSelectedOverlay","clickableKeyPress","Clickable","children","onKeyPress","bind","role","tabIndex","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.5ef7efee.chunk.js","sourcesContent":["import React from 'react';\nimport \"./dice.css\";\n\nclass Dice extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {diceClassToggler: false};\n  }\n\n  componentDidUpdate(prevProps) {\n    if(prevProps.needsToRoll === true && this.props.needsToRoll === false) {\n      this.setState({diceClassToggler: !this.state.diceClassToggler});\n    }\n  }\n\n  render() {\n    const {dice} = this.props;\n    const {diceClassToggler} = this.state;\n\n    return (\n      <div className=\"dice-bg\">\n        <div className=\"dice\">\n          {dice.map((die, i) => (\n            <ol className={`die-list ${diceToggler(diceClassToggler, i) ? \"even-roll\" : \"odd-roll\"}`} data-roll={die} key={i}>\n              <li className=\"die-item\" data-side=\"1\">\n                <span className=\"dot\"/>\n              </li>\n              <li className=\"die-item\" data-side=\"2\">\n                <span className=\"dot\"/>\n                <span className=\"dot\"/>\n              </li>\n              <li className=\"die-item\" data-side=\"3\">\n                <span className=\"dot\"/>\n                <span className=\"dot\"/>\n                <span className=\"dot\"/>\n              </li>\n              <li className=\"die-item\" data-side=\"4\">\n                <span className=\"dot\"/>\n                <span className=\"dot\"/>\n                <span className=\"dot\"/>\n                <span className=\"dot\"/>\n              </li>\n              <li className=\"die-item\" data-side=\"5\">\n                <span className=\"dot\"/>\n                <span className=\"dot\"/>\n                <span className=\"dot\"/>\n                <span className=\"dot\"/>\n                <span className=\"dot\"/>\n              </li>\n              <li className=\"die-item\" data-side=\"6\">\n                <span className=\"dot\"/>\n                <span className=\"dot\"/>\n                <span className=\"dot\"/>\n                <span className=\"dot\"/>\n                <span className=\"dot\"/>\n                <span className=\"dot\"/>\n              </li>\n            </ol>\n          ))}\n        </div>\n      </div>\n    )\n  }\n};\n\nexport default Dice;\n\nconst diceToggler = (toggler, index) => index % 2 === 0 ? toggler : !toggler;","export const isPossible = (valuesArray, sum, target) => {\n  if(sum === target) {\n    return true;\n  }\n  if(sum > target) {\n    return false;\n  }\n  for(let i = 0; i < valuesArray.length; i++) {\n    let remainingValues = valuesArray.slice(0); // copy\n    remainingValues.splice(i,1);\n    if(isPossible(remainingValues, sum + valuesArray[i], target)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const canSelectNumbers = (selectedNumbers, total) => (\n  sumArray([...selectedNumbers]) === total\n);\n\nexport const possibleChoices = [...Array(9).keys()].map(i => i + 1);\n\nexport const sumArray = (arr) => arr.reduce((a, b) => a + b, 0);\n\nexport const rollDie = () => Math.ceil(Math.random()*6);","import {sumArray, isPossible, canSelectNumbers, rollDie} from \"./gameHelpers\";\nexport const ROLL_DICE = \"ROLL_DICE\";\nexport const FINISH_ROLL_DICE = \"FINISH_ROLL_DICE\";\nexport const TOGGLE_CHOICE = \"TOGGLE_CHOICE\";\nexport const FINALIZE_SELECTION = \"FINALIZE_SELECTION\";\nexport const NEW_GAME = \"NEW_GAME\";\n\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case ROLL_DICE:\n      return rollDiceReducer(state, action.dispatch);\n    case FINISH_ROLL_DICE:\n      return finishRollDiceReducer(state);\n    case TOGGLE_CHOICE:\n      return toggleChoiceReducer(state, action.payload);\n    case FINALIZE_SELECTION:\n      return finalizeSelectionReducer(state);\n    case NEW_GAME:\n      return newGameReducer(state);\n    default:\n      return state;\n  }\n};\n\nexport const getInitialState = (dice) => ({\n  dice: dice || [],\n  availableChoices: allChoices(),\n  pickingNumbers: false,\n  needsToRoll: true,\n  rolling: false,\n  selectedNumbers: new Set(),\n  gameOver: false,\n  winner: false,\n});\n\nconst rollDiceReducer = (state, dispatch) => {\n  const {gameOver, needsToRoll, availableChoices} = state;\n  if(gameOver || !needsToRoll) {\n    return state;\n  }\n  const shouldRollTwoDice = sumArray([...availableChoices]) > 6;\n  const dice = shouldRollTwoDice ? [rollDie(), rollDie()] : [rollDie()];\n\n  const isGameOver = !isPossible([...availableChoices], 0, sumArray(dice));\n  setTimeout(() => dispatch({type: FINISH_ROLL_DICE}), 1500);\n  return {\n    dice,\n    availableChoices,\n    pickingNumbers: !isGameOver,\n    needsToRoll: false,\n    rolling: true,\n    selectedNumbers: new Set(),\n    gameOver: isGameOver,\n    winner: false,\n  }\n};\n\nconst finishRollDiceReducer = (state) => {\n  return {\n    ...state,\n    rolling: false,\n  };\n};\n\nconst toggleChoiceReducer = (state, choice) => {\n  const {gameOver, availableChoices, selectedNumbers, pickingNumbers} = state;\n  if(gameOver || !availableChoices.has(choice) || !pickingNumbers) {\n    return state;\n  }\n  const newSelectedNumbers = new Set(selectedNumbers);\n  const action = selectedNumbers.has(choice) ? \"delete\" : \"add\";\n  newSelectedNumbers[action](choice);\n  return {\n    ...state,\n    selectedNumbers: newSelectedNumbers\n  };\n};\n\nconst finalizeSelectionReducer = (state) => {\n  const {gameOver, needsToRoll, availableChoices, selectedNumbers, pickingNumbers, dice} = state;\n  if(\n    gameOver ||\n    needsToRoll ||\n    !pickingNumbers ||\n    !selectedNumbersValid(selectedNumbers, availableChoices) ||\n    !canSelectNumbers(selectedNumbers, sumArray(dice))\n  ) {\n    return state;\n  }\n  const newAvailableChoices = new Set(availableChoices);\n  selectedNumbers.forEach(num => newAvailableChoices.delete(num));\n\n  const isWinner = newAvailableChoices.size === 0;\n\n  return {\n    dice: state.dice,\n    availableChoices: newAvailableChoices,\n    pickingNumbers: false,\n    needsToRoll: true,\n    selectedNumbers: new Set(),\n    gameOver: isWinner,\n    winner: isWinner,\n  };\n};\n\nconst selectedNumbersValid = (selectedNumbers, availableNumbers) =>\n  [...selectedNumbers].every(num => availableNumbers.has(num));\n\nconst allChoices = () => new Set([...Array(9).keys()].map(i => i + 1));\n\nconst newGameReducer = (state) => {\n  const newDice = state.dice.length === 1 ? state.dice.concat(rollDie()) : state.dice;\n  return getInitialState(newDice);\n};\n\nexport default reducer;","import React from 'react';\nimport './fireworks.css';\n\nconst Fireworks = () => (\n  <div className=\"pyro\">\n    <div className=\"before\"/>\n    <div className=\"after\"/>\n  </div>\n);\n\nexport default Fireworks;","import React, {useReducer} from \"react\";\nimport {StyleSheet, css} from 'aphrodite/no-important';\nimport woodPattern from './wood-pattern.png';\nimport Dice from \"./dice\";\nimport reducer, {getInitialState, ROLL_DICE, NEW_GAME, FINALIZE_SELECTION, TOGGLE_CHOICE} from './gameReducer';\nimport {sumArray, possibleChoices, canSelectNumbers, rollDie} from './gameHelpers';\nimport {useKeyboardShortcuts} from \"./gameKeyboardShortcuts\";\nimport Fireworks from \"./fireworks\";\n\nconst Game = () => {\n  const [state, dispatch] = useReducer(reducer, [rollDie(), rollDie()], getInitialState);\n  const {dice, availableChoices, pickingNumbers, needsToRoll, rolling, selectedNumbers, gameOver, winner} = state;\n\n  useKeyboardShortcuts(dispatch);\n\n  return (\n    <div className={css(styles.gameContainer)}>\n      <div className={css(styles.boxContainer)} style={{backgroundImage: `url(${woodPattern})`}}>\n        <Numbers\n          availableChoices={availableChoices}\n          chosenNumbers={selectedNumbers}\n          toggleChoice={choice => dispatch({type: TOGGLE_CHOICE, payload: choice})}\n          disabled={!(gameOver || pickingNumbers)}\n          gameOver={gameOver}/>\n        <div>\n          <button\n            disabled={!pickingNumbers || !canSelectNumbers(selectedNumbers, sumArray(dice))}\n            onClick={() => dispatch({type: FINALIZE_SELECTION})}\n          >\n            Select these numbers\n          </button>\n        </div>\n        <div className={css(styles.diceSurface)}>\n          <Dice dice={dice} needsToRoll={needsToRoll}/>\n          <div className={css(styles.actionsContainer)}>\n            {!rolling && needsToRoll && !gameOver &&\n              (\n              <div>\n                <button\n                  onClick={() => dispatch({type: ROLL_DICE, dispatch})}\n                >\n                  Roll\n                </button>\n              </div>\n              )\n            }\n          </div>\n          {!rolling && gameOver && <GameOverOverlay availableChoices={availableChoices} winner={winner} dispatch={dispatch} />}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst GameOverOverlay = ({winner, availableChoices, dispatch}) => (\n  <>\n    <div className={css(styles.gameOverContainer, styles.gameOverOverlay)}/>\n    { winner &&\n      <div className={css(styles.gameOverContainer)}>\n        <Fireworks/>\n      </div>\n    }\n    <div className={css(styles.gameOverContainer)}>\n      <div className={css(styles.gameOverTextContainer)}>\n        {winner ?\n          <span>You shut the box!!!</span>\n          :\n          <>\n            <span>nope</span>\n            <span>{[...availableChoices].join(' + ')}{availableChoices.size > 1 && ` = ${sumArray([...availableChoices])}`}</span>\n          </>\n        }\n        <button onClick={() => dispatch({type: NEW_GAME})}>Start new game</button>\n      </div>\n    </div>\n  </>\n);\n\nconst Numbers = ({availableChoices, chosenNumbers, toggleChoice, disabled, gameOver}) => {\n  return (\n    <div className={css(styles.allNumbersContainer)} style={{backgroundImage: `url(${woodPattern})`}}>\n      {possibleChoices.map(choice => (\n        <Number\n          key={choice}\n          number={choice}\n          disabled={disabled || !availableChoices.has(choice)}\n          selected={availableChoices.has(choice) && chosenNumbers.has(choice)}\n          onClick={() => {\n            !gameOver && toggleChoice(choice)\n          }}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst Number = ({number, disabled, selected, onClick}) => (\n  <Clickable\n    className={css(\n      styles.numberContainer,\n      disabled && styles.numberDisabledOverlay,\n      selected && styles.numberSelected\n    )}\n    onClick={() => !disabled && onClick(number)}\n  >\n    <div className={css(styles.number, disabled && styles.numberDisabled)}>{number}</div>\n  </Clickable>\n);\n\nexport default Game;\n\nconst NUMBER_HEIGHT = 120;\nconst NUMBER_HEIGHT_MOBILE = 72;\n\nconst styles = StyleSheet.create({\n  gameContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n  },\n  boxContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    flex: 1,\n    padding: '24px',\n    paddingBottom: NUMBER_HEIGHT_MOBILE - 24,\n    backgroundColor: '#571e00',\n    '@media only screen and (max-width: 479px)': {\n      padding: '24px 0 48px',\n    },\n  },\n  actionsContainer: {\n    position: 'absolute',\n    top: 0,\n  },\n  diceSurface: {\n    flex: 1,\n    width: '100%',\n    backgroundImage: 'none',\n    backgroundColor: '#076324',\n    position: 'relative',\n    paddingTop: 48,\n  },\n  gameOverOverlay: {\n    backgroundColor: 'black',\n    opacity: 0.3,\n  },\n  gameOverContainer: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    textAlign: 'center',\n    padding: 24,\n  },\n  gameOverTextContainer: {\n    backgroundColor: 'white',\n    padding: 8,\n    display: 'inline-flex',\n    flexDirection: 'column',\n  },\n  allNumbersContainer: {\n    display: 'flex',\n    backgroundColor: '#5e4300',\n    width: '100%',\n    maxWidth: '960px',\n    height: NUMBER_HEIGHT,\n    '@media only screen and (max-width: 479px)': {\n      height: NUMBER_HEIGHT_MOBILE,\n    },\n  },\n  numberContainer: {\n    display: 'flex',\n    border: 'solid black 2px',\n    flex: 1,\n  },\n  numberSelected: {\n    borderColor: 'yellow',\n  },\n  number: {\n    flex: 1,\n    fontSize: '32px',\n    fontWeight: 'bold',\n    color: 'white',\n    cursor: 'pointer',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '@media only screen and (max-width: 479px)': {\n      fontSize: '16px',\n    },\n  },\n  numberDisabled: {\n    color: 'black',\n  },\n  numberDisabledOverlay: {\n    cursor: 'unset',\n    opacity: 0.5,\n    backgroundColor: 'white',\n  },\n  numberSelectedOverlay: {\n\n  },\n});\n\nconst clickableKeyPress = (onClick, event) => {\n  if(event.key === ' ' || event.key === 'Enter') {\n    onClick(event);\n  }\n};\n\nconst Clickable = ({children, onClick, ...props}) => (\n  <div onKeyPress={clickableKeyPress.bind(null, onClick)} onClick={onClick} role=\"button\" tabIndex=\"0\" {...props}>\n    {children}\n  </div>\n);","import {useEffect} from \"react\";\nimport {FINALIZE_SELECTION, NEW_GAME, ROLL_DICE, TOGGLE_CHOICE} from \"./gameReducer\";\n\nexport const useKeyboardShortcuts = (dispatch) => {\n  useEffect(() => {\n    const handleKeypress = event => {\n      switch(event.key) {\n        case \"r\":\n          dispatch({type: ROLL_DICE, dispatch});\n          break;\n        case \"n\":\n          dispatch({type: NEW_GAME});\n          break;\n        case \"1\":\n        case \"2\":\n        case \"3\":\n        case \"4\":\n        case \"5\":\n        case \"6\":\n        case \"7\":\n        case \"8\":\n        case \"9\":\n          dispatch({type: TOGGLE_CHOICE, payload: parseInt(event.key)});\n          break;\n        case \"f\":\n          dispatch({type: FINALIZE_SELECTION});\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener(\"keypress\", handleKeypress);\n    return () => window.removeEventListener(\"keypress\", handleKeypress);\n  });\n};","import React from 'react';\nimport Game from \"./game/game\";\n\nfunction App() {\n  return (\n    <div>\n      <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/wood-pattern.02464a71.png\";"],"sourceRoot":""}